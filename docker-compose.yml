version: "2.3"
services:
  bnv_dashboard:
    command: streamlit run dashboard/entrypoint.py
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WANDB_API_KEY=${WANDB_API_KEY}
    volumes:
        - ./:/usr/src/app
    expose:
        - 8089:8501
    networks:
      - bn_network
    # stdin_open: true
    # tty: true


  bnv_db:
    image: mongo:4.2.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_DATA_DIR: /data/db
      MONGO_LOG_DIR: /dev/null
    expose:
      - 27017
    volumes:
      - ./database/db:/data/db
    networks:
      - bn_network

  bnv_mongo_express:
    image: mongo-express:0.49.0
    restart: always
    expose:
      - 8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: example
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: bnv_db
      ME_CONFIG_MONGODB_PORT: 27017
    depends_on:
      - bnv_db
    logging:
      driver: none
    networks:
      - bn_network

  bnv_rabbitmq:
    restart: always
    image: rabbitmq:management
    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq
    expose:
      - 5672
      - 15672
    networks:
      - bn_network

  bnv_worker:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    working_dir: /usr/src/app/dashboard
    command: celery -A worker worker -l info
    volumes:
      - ./:/usr/src/app
    depends_on:
      - bnv_db
      - bnv_rabbitmq
    networks:
      - bn_network

  bnv_html_guidelines:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    working_dir: /usr/src/app/dashboard
    command: python3 -m http.server 3000 --directory guidelines/
    volumes:
      - ./:/usr/src/app
    depends_on:
      - bnv_dashboard
    expose:
      - 3000
  
  # bnv-nginx:
  #   image: nginx:1.25
  #   container_name: bnv-nginx
  #   ports:
  #     - "8089:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - bnv_dashboard
  #   networks:
  #     - bn_network
  #   restart: always

  
networks:
  bn_network:
    driver: bridge
